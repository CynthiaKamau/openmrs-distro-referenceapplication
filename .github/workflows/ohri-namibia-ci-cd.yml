name: OHRI Namibia Dev with O3 Images

on:
  push:
    branches:
      - dev
      - demo
      - working 
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    strategy:
        matrix:
          java: [ '8', '11' ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'maven'

      - name: Build and Test
        run: mvn --batch-mode --update-snapshots --activate-profiles validator clean package
 
  docker_setup:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' 
   
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  docker_staging_backend:
    runs-on: ubuntu-latest
    needs: docker_setup 

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ohri-namibia-dev-backend-2_6:next,${{ secrets.DOCKERHUB_USERNAME }}/ohri-namibia-dev-backend-2_6:ci_${{ github.run_number }}
          cache-from: type=inline,ref=user/app:buildcache
          cache-to: type=inline,ref=user/app:buildcache,mode=max

  docker_staging_frontend:
    runs-on: ubuntu-latest
    needs: docker_setup

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ohri-namibia-dev-frontend:next,${{ secrets.DOCKERHUB_USERNAME }}/ohri-namibia-dev-frontend:ci_${{ github.run_number }}
          cache-from: type=inline,ref=user/app:buildcache
          cache-to: type=inline,ref=user/app:buildcache,mode=max

  docker_staging_gateway:
    runs-on: ubuntu-latest
    needs: docker_setup 
    
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ./gateway
          file: ./gateway/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ohri-namibia-dev-proxy:next,${{ secrets.DOCKERHUB_USERNAME }}/ohri-namibia-dev-proxy:ci_${{ github.run_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Save image digest
        run: echo "::set-output name=image::${{ steps.build-and-push.output.digest }}"

  namibia_dev_server_status:
      if: github.ref == 'refs/heads/dev' 
      runs-on: ubuntu-latest
      needs: docker_staging_backend

      steps: 
        - name: Checkout repository
          uses: actions/checkout@v3  
          with:
            ref: dev

        - name: Copy files to /home/runner/
          run: |
            ls -la -t $GITHUB_WORKSPACE/.github
            cp -r $GITHUB_WORKSPACE/.github/.ssh/ /home/runner/
            ls -la -t $GITHUB_WORKSPACE/.github/.ssh/ 

        - name: List contents of /home/runner/
          run: ls -la /home/runner/

        - name: webfactory/ssh-agent
          uses: webfactory/ssh-agent@v0.8.0
          with:
            ssh-private-key: ${{ secrets.LL_SSH_PRIVATE_KEY }}

        - name: Check SSH to remote OHRI Dev status
          run: |
              ssh-keygen -R 172.19.0.13      
              
  namibia_dev_server_connection:
      runs-on: ubuntu-latest
      needs: namibia_dev_server_status
      steps:
        - name: webfactory/ssh-agent
          uses: webfactory/ssh-agent@v0.8.0
          with:
            ssh-private-key: ${{ secrets.LL_SSH_PRIVATE_KEY }}

        - name: SSH to remote OHRI Dev server 
          run: | 
            ssh -o StrictHostKeyChecking=no llemos@reports.globalhealthapp.net -p 3220
            ls -la -t  && \
            cd /opt && \
            ls -la -t 
        
  namibia_dev_deploy:
    runs-on: ubuntu-latest
    needs: namibia_dev_server_status

    if: (github.event_name == 'push' ||  github.event.pull_request.merged) 
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: webfactory/ssh-agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.LL_SSH_PRIVATE_KEY }}

      - name: SSH to remote OHRI Dev server via jump host
        run: |
            ssh -p 2216 \
            -o "UserKnownHostsFile=/dev/null" \
            -o "StrictHostKeyChecking=no" \
            -o "ProxyCommand=ssh -o StrictHostKeyChecking=no -W %h:%p ssh llemos@reports.globalhealthapp.net -p 3220" \
            "cd /opt && \
            docker compose -f docker-compose-ohri-namibia-dev.yml pull && \
            docker compose -f docker-compose-ohri-namibia-dev.yml stop && \
            docker compose -f docker-compose-ohri-namibia-dev.yml up -d"
      
                  
  namibia_working_server_status:
    if: github.ref == 'refs/heads/working' 
    runs-on: ubuntu-latest
    needs: docker_staging_backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
            ref: working

      - name: Copy files to /home/runner/
        run: |
          ls -la -t
          cp -r $GITHUB_WORKSPACE/.github/.ssh/ /home/runner/
          ls -la -t $GITHUB_WORKSPACE/

      - name: List contents of /home/runner/
        run: ls -la /home/runner/

      - name: webfactory/ssh-agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.LL_SSH_PRIVATE_KEY }}

      - name: Check SSH to remote OHRI Dev status
        run: |
            ssh-keygen -R 172.19.0.12      
            
  namibia_working_server_connection:
      runs-on: ubuntu-latest
      needs: namibia_working_server_status
        

      steps:      
        - name: webfactory/ssh-agent
          uses: webfactory/ssh-agent@v0.8.0
          with:
            ssh-private-key: ${{ secrets.LL_SSH_PRIVATE_KEY }}
            
        - name: SSH to remote OHRI Dev server 
          run: | 
            ssh -o StrictHostKeyChecking=no llemos@reports.globalhealthapp.net -p 3221
            ls -la -t  && \
            cd /opt && \
            ls -la -t 
          
  namibia_working_deploy:
    runs-on: ubuntu-latest
    needs: namibia_working_server_status

    if: (github.event_name == 'push' ||  github.event.pull_request.merged) 

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: webfactory/ssh-agent
        uses: webfactory/ssh-agent@v0.8.0

        with:
          ssh-private-key: ${{ secrets.LL_SSH_PRIVATE_KEY }}

      - name: SSH to remote OHRI Dev server via jump host
        run: |
          ssh -p 2217 \
              -o "UserKnownHostsFile=/dev/null" \
              -o "StrictHostKeyChecking=no" \
              -o "ProxyCommand=ssh -o StrictHostKeyChecking=no -W %h:%p llemos@reports.globalhealthapp.net -p 3221" \
              "cd /opt && \
              docker compose -f docker-compose-ohri-namibia-working.yml pull && \
              docker compose -f docker-compose-ohri-namibia-working.yml stop && \
              docker compose -f docker-compose-ohri-namibia-working.yml up -d"

  namibia_demo_server_status:
    if: github.ref == 'refs/heads/demo' 
    runs-on: ubuntu-latest
    needs: docker_staging_backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
            ref: demo

      - name: Copy files to /home/runner/
        run: |
          ls -la -t
          cp -r $GITHUB_WORKSPACE/.github/.ssh/ /home/runner/
          ls -la -t $GITHUB_WORKSPACE/

      - name: List contents of /home/runner/
        run: ls -la /home/runner/

      - name: webfactory/ssh-agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.LL_SSH_PRIVATE_KEY }}

      - name: Check SSH to remote OHRI Dev status
        run: |
            ssh-keygen -R 172.19.0.3      
            
  namibia_demo_server_connection:
      runs-on: ubuntu-latest
      needs: namibia_demo_server_status      

      steps:      
        - name: webfactory/ssh-agent
          uses: webfactory/ssh-agent@v0.8.0
          with:
            ssh-private-key: ${{ secrets.LL_SSH_PRIVATE_KEY }} 

        - name: SSH to remote OHRI Dev server 
          run: | 
            ssh -o StrictHostKeyChecking=no llemos@reports.globalhealthapp.net -p 2202
            ls -la -t  && \
            cd /opt && \
            ls -la -t 
          
  namibia_demo_deploy:
      runs-on: ubuntu-latest
      needs: namibia_demo_server_status

      if: (github.event_name == 'push' ||  github.event.pull_request.merged) 

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: webfactory/ssh-agent
          uses: webfactory/ssh-agent@v0.8.0

          with:
            ssh-private-key: ${{ secrets.LL_SSH_PRIVATE_KEY }}

        - name: SSH to remote OHRI Dev server via jump host
          run: |
            ssh -p 2303 \
                -o "UserKnownHostsFile=/dev/null" \
                -o "StrictHostKeyChecking=no" \
                -o "ProxyCommand=ssh -o StrictHostKeyChecking=no -W %h:%p llemos@reports.globalhealthapp.net -p 2202" \
                "cd /opt && \
                docker compose -f docker-compose-ohri-namibia-demo.yml pull && \
                docker compose -f docker-compose-ohri-namibia-demo.yml stop && \
                docker compose -f docker-compose-ohri-namibia-demo.yml up -d"

